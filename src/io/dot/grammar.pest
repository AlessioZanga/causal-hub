file = _{ SOI ~ graphs ~ EOI }

graphs = _{ graph+ }

graph = { strict ~ graph_type ~ graph_id ~ "{" ~ statements ~ "}" }

strict = { ^"strict"? }

graph_type = { ^"graph" | ^"digraph" }

graph_id = { id? }

text = @{ !ASCII_DIGIT ~ ("_" | ASCII_ALPHANUMERIC)+ }

quoted_text = @{ "\"" ~ (!"\"" ~ "\\\""? ~ ANY)* ~ "\"" }

number = @{ "-"? ~ ("." ~ ASCII_DIGIT+ | ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT*)?) }

id = _{ number | text | quoted_text }

html = { "<" ~ (!(">" ~ WHITESPACE* ~">") ~ ANY)+ ~ ">" ~ WHITESPACE* ~ ">" }

pair = { id ~ "=" ~ (id | html) }

pairs = { "[" ~ (pair ~ (";" | ",")?)* ~ "]" }

statements = { statement* }

statement = _{ (pair | attribute | subgraph | path | vertex) ~ ";"? }

attribute = { (graph_type | vertex_type | path_type) ~ pairs }

subgraph_type = { ^"subgraph" }

subgraph = { (subgraph_type ~ id?)? ~ "{" ~ statements? ~ "}" }

vertex_type = { ^"node" }

vertex_id = { id ~ port? }

port = { (":" ~ id ~ (":" ~ vertex_direction)? | ":" ~ vertex_direction) }

vertex_direction = { "n" | "ne" | "e" | "se" | "s" | "sw" | "w" | "nw" | "c" | "_" }

vertex = { vertex_id ~ pairs? }

path_type = { ^"edge" }

path_id = { (vertex_id | subgraph) ~ (path_direction ~ (vertex_id | subgraph))+ }

path_direction = { ("->" | "--") }

path = { path_id ~ pairs? }

WHITESPACE = _{ (" " | "\t" | NEWLINE) }

COMMENT = _{ ("/*" ~ (!"*/" ~ ANY)* ~ "*/"  | "//" ~ (!"\n" ~ ANY)* | "#" ~ (!"\n" ~ ANY)*) }
